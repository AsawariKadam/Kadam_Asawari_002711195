/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import model.Patient;
import model.PatientDirectory;

/**
 *
 * @author asawari
 */
public class PatientBookAppointment extends javax.swing.JPanel {

    /**
     * Creates new form PatientBookAppointment
     */
    PatientDirectory patientDirectory;
    public PatientBookAppointment(PatientDirectory patientDirectory) {
        initComponents();
        this.patientDirectory = patientDirectory;
        comboCommunity.addItem("MALDEN");
        comboCommunity.addItem("HUNTINGTON");
        comboCommunity.setSelectedItem("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        txtLname = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        lblfname = new javax.swing.JLabel();
        lbllname = new javax.swing.JLabel();
        lblage = new javax.swing.JLabel();
        lblhouseno = new javax.swing.JLabel();
        lblHospName = new javax.swing.JLabel();
        comboHospital = new javax.swing.JComboBox<>();
        txtCity = new javax.swing.JTextField();
        txtHouse = new javax.swing.JTextField();
        txtFname = new javax.swing.JTextField();
        lblLname = new javax.swing.JLabel();
        lblFname = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        comboCommunity = new javax.swing.JComboBox<>();
        btnBookAppointment = new javax.swing.JButton();

        jLabel1.setText("Book Appointment");

        lblHouse.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblHouse.setForeground(new java.awt.Color(153, 153, 0));
        lblHouse.setText("House Number");

        txtLname.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtLname.setForeground(new java.awt.Color(153, 153, 0));
        txtLname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLnameKeyReleased(evt);
            }
        });

        txtAge.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtAge.setForeground(new java.awt.Color(153, 153, 0));
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });

        lblfname.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblfname.setForeground(new java.awt.Color(0, 102, 102));

        lbllname.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lbllname.setForeground(new java.awt.Color(0, 102, 102));

        lblage.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblage.setForeground(new java.awt.Color(0, 102, 102));

        lblhouseno.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblhouseno.setForeground(new java.awt.Color(0, 102, 102));

        lblHospName.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblHospName.setForeground(new java.awt.Color(153, 153, 0));
        lblHospName.setText("Hospital ");

        comboHospital.setBackground(new java.awt.Color(51, 153, 255));
        comboHospital.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        comboHospital.setForeground(new java.awt.Color(153, 153, 0));
        comboHospital.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Select Hospital"}));
        comboHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboHospitalActionPerformed(evt);
            }
        });

        txtCity.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtCity.setForeground(new java.awt.Color(153, 153, 0));

        txtHouse.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtHouse.setForeground(new java.awt.Color(153, 153, 0));
        txtHouse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHouseKeyReleased(evt);
            }
        });

        txtFname.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtFname.setForeground(new java.awt.Color(153, 153, 0));
        txtFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFnameActionPerformed(evt);
            }
        });
        txtFname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFnameKeyReleased(evt);
            }
        });

        lblLname.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblLname.setForeground(new java.awt.Color(153, 153, 0));
        lblLname.setText("Last Name");

        lblFname.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblFname.setForeground(new java.awt.Color(153, 153, 0));
        lblFname.setText("First Name");

        lblAge.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblAge.setForeground(new java.awt.Color(153, 153, 0));
        lblAge.setText("Age");

        lblCommunity.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblCommunity.setForeground(new java.awt.Color(153, 153, 0));
        lblCommunity.setText("Community");

        lblCity.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblCity.setForeground(new java.awt.Color(153, 153, 0));
        lblCity.setText("City");

        comboCommunity.setBackground(new java.awt.Color(51, 153, 255));
        comboCommunity.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        comboCommunity.setForeground(new java.awt.Color(153, 153, 0));
        comboCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Select Community"}));
        comboCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCommunityActionPerformed(evt);
            }
        });

        btnBookAppointment.setBackground(new java.awt.Color(51, 153, 255));
        btnBookAppointment.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        btnBookAppointment.setText("Book Appointment");
        btnBookAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookAppointmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBookAppointment)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblHospName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFname, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(comboCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCity, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLname, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFname, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblfname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbllname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblhouseno, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(comboHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblfname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFname)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbllname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblLname)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblage, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblAge)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunity)
                    .addComponent(comboCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblhouseno, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHouse)
                        .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospName))
                .addGap(49, 49, 49)
                .addComponent(btnBookAppointment)
                .addGap(69, 69, 69))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtLnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{0,50}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtLname.getText());
        if(!match.matches()){
            lbllname.setText("Name is Invalid, Please enter Valid name !");
        }else{
            lbllname.setText("");
        }
    }//GEN-LAST:event_txtLnameKeyReleased

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{0,3}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtAge.getText());
        if(!match.matches()){
            lblage.setText("Only Numbers and upto 3 digits are allowed");
        }else{
            lblage.setText("");
        }
    }//GEN-LAST:event_txtAgeKeyReleased

    private void comboHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboHospitalActionPerformed

    private void txtHouseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHouseKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{0,3}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtHouse.getText());
        if(!match.matches()){
            lblhouseno.setText("Only Numbers and upto 3 digits are allowed");
        }else{
            lblhouseno.setText("");
        }
    }//GEN-LAST:event_txtHouseKeyReleased

    private void txtFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFnameActionPerformed

    private void txtFnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{0,50}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtFname.getText());
        if(!match.matches()){
            lblfname.setText("Name is Invalid, Please enter Valid name !");
        }else{
            lblfname.setText("");
        }
    }//GEN-LAST:event_txtFnameKeyReleased

    private void comboCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCommunityActionPerformed

        if(comboCommunity.getSelectedItem().equals("HUNTINGTON")){
            comboHospital.removeAllItems();
            comboHospital.setSelectedItem(null);
            comboHospital.addItem("Massachusetts General Hospital");
            comboHospital.addItem("Boston Medical Center");
        }
        else
        if(comboCommunity.getSelectedItem().equals("MALDEN")){

            comboHospital.removeAllItems();
            comboHospital.setSelectedItem(null);
            comboHospital.addItem("Malden Hospital");
            comboHospital.addItem("Malden general Hospital");
        }
    }//GEN-LAST:event_comboCommunityActionPerformed

    private void btnBookAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookAppointmentActionPerformed
        // TODO add your handling code here:
        boolean patientYN = false;
        //int selectedRowIndex = viewPersonTable.getSelectedRow();
        //DefaultTableModel model = (DefaultTableModel) viewPersonTable.getModel();
        //System.out.println(model.getValueAt(selectedRowIndex, 0));
        //Person person = (Person) model.getValueAt(selectedRowIndex , 0);
        //System.out.println(person.getFirstname()+ person.getLastname());
        patientYN = ifPatientExist(txtFname.getText(), txtLname.getText());

        if(!patientYN){
            Patient patient = new Patient();
            patient.setPatientfirstname(txtFname.getText());
            patient.setPatientlastname(txtLname.getText());
            patient.setPatientage(Integer.parseInt(txtAge.getText()));
            patient.setPatientcity(txtCity.getText());
            patient.setPatientcommunity(comboCommunity.getSelectedItem().toString());
            patient.setPatienthospital(comboHospital.getSelectedItem().toString());
            patient.setPatienthouse(Integer.parseInt(txtHouse.getText()));
            patient.setPatientid(getUniqueId());
            patientDirectory.addNewPatient(patient);
            System.out.println(patient.getPatientid());
            JOptionPane.showMessageDialog(this, "Appointment Confirmed ");
        }
        else{
            JOptionPane.showMessageDialog(this, "Appointment Confirmed ");
        }
    }//GEN-LAST:event_btnBookAppointmentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookAppointment;
    private javax.swing.JComboBox<String> comboCommunity;
    private javax.swing.JComboBox<String> comboHospital;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblFname;
    private javax.swing.JLabel lblHospName;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblLname;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblfname;
    private javax.swing.JLabel lblhouseno;
    private javax.swing.JLabel lbllname;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtLname;
    // End of variables declaration//GEN-END:variables
    
    private int getUniqueId() {
        
        int randomPIN = (int)(Math.random()*90000)+10000;
        for(Patient patient : patientDirectory.getPatientList()){
            if(patient.getPatientid()== randomPIN){
            getUniqueId();
            }
        }
        return randomPIN;
    }
    
    
    private boolean ifPatientExist(String fName, String lName) {
        boolean exists = false;
        for(Patient patient : patientDirectory.getPatientList()){
        if(patient.getPatientfirstname().equals(fName) && (patient.getPatientlastname()).equals(lName)){
            exists = true;
        }
        }
        return exists;
    }

}
